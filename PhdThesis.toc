\contentsline {chapter}{摘\hspace {1em}要}{I}{chapter*.1}
\contentsline {chapter}{ABSTRACT}{III}{chapter*.2}
\contentsline {chapter}{目\hspace {1em}录}{V}{chapter*.3}
\contentsline {chapter}{表\hspace {1em}格}{IX}{chapter*.4}
\contentsline {chapter}{插\hspace {1em}图}{XII}{chapter*.5}
\contentsline {chapter}{\numberline {第一章\hspace {0.3em}}绪论}{1}{chapter.1}
\contentsline {section}{\numberline {1.1}云计算的基本概念}{1}{section.1.1}
\contentsline {section}{\numberline {1.2}研究背景和意义}{3}{section.1.2}
\contentsline {subsection}{\numberline {1.2.1}分布式存储系统的发展和新的需求}{3}{subsection.1.2.1}
\contentsline {subsection}{\numberline {1.2.2}分布式计算模型的发展和新的需求}{5}{subsection.1.2.2}
\contentsline {section}{\numberline {1.3}本文的研究内容}{7}{section.1.3}
\contentsline {section}{\numberline {1.4}论文结构}{8}{section.1.4}
\contentsline {chapter}{\numberline {第二章\hspace {0.3em}}基于模糊逻辑的异构Hadoop集群配置优化}{11}{chapter.2}
\contentsline {section}{\numberline {2.1}引言}{11}{section.2.1}
\contentsline {section}{\numberline {2.2}相关背景介绍}{12}{section.2.2}
\contentsline {subsection}{\numberline {2.2.1}模糊逻辑}{12}{subsection.2.2.1}
\contentsline {subsection}{\numberline {2.2.2}Hadoop参数分析}{13}{subsection.2.2.2}
\contentsline {subsection}{\numberline {2.2.3}Hadoop参数加载流程}{14}{subsection.2.2.3}
\contentsline {section}{\numberline {2.3}基于模糊逻辑的配置算法}{16}{section.2.3}
\contentsline {subsection}{\numberline {2.3.1}运行时数据搜集}{16}{subsection.2.3.1}
\contentsline {subsection}{\numberline {2.3.2}模糊控制器的实现}{17}{subsection.2.3.2}
\contentsline {subsubsection}{\numberline {2.3.2.1}隶属度函数}{17}{subsubsection.2.3.2.1}
\contentsline {subsubsection}{\numberline {2.3.2.2}模糊推理规则}{19}{subsubsection.2.3.2.2}
\contentsline {section}{\numberline {2.4}实验和分析}{20}{section.2.4}
\contentsline {subsection}{\numberline {2.4.1}Matlab仿真}{20}{subsection.2.4.1}
\contentsline {subsection}{\numberline {2.4.2}Hadoop集群实验}{21}{subsection.2.4.2}
\contentsline {subsubsection}{\numberline {2.4.2.1}同构环境实验}{21}{subsubsection.2.4.2.1}
\contentsline {subsubsection}{\numberline {2.4.2.2}异构环境实验}{22}{subsubsection.2.4.2.2}
\contentsline {section}{\numberline {2.5}小结}{23}{section.2.5}
\contentsline {chapter}{\numberline {第三章\hspace {0.3em}}基于内存的分布式键值存储系统}{25}{chapter.3}
\contentsline {section}{\numberline {3.1}引言}{25}{section.3.1}
\contentsline {section}{\numberline {3.2}相关工作简介}{26}{section.3.2}
\contentsline {subsection}{\numberline {3.2.1}相关分布式存储系统介绍}{26}{subsection.3.2.1}
\contentsline {subsection}{\numberline {3.2.2}内存存储的可行性和相关系统介绍}{31}{subsection.3.2.2}
\contentsline {subsection}{\numberline {3.2.3}前人工作的不足}{33}{subsection.3.2.3}
\contentsline {section}{\numberline {3.3}基于内存的分布式键值存储系统}{34}{section.3.3}
\contentsline {subsection}{\numberline {3.3.1}Sedna总体架构}{35}{subsection.3.3.1}
\contentsline {subsection}{\numberline {3.3.2}数据分割}{37}{subsection.3.3.2}
\contentsline {subsection}{\numberline {3.3.3}数据备份}{39}{subsection.3.3.3}
\contentsline {subsection}{\numberline {3.3.4}节点管理}{41}{subsection.3.3.4}
\contentsline {subsection}{\numberline {3.3.5}ZooKeeper子机群}{42}{subsection.3.3.5}
\contentsline {subsection}{\numberline {3.3.6}基本数据访问API}{44}{subsection.3.3.6}
\contentsline {subsubsection}{\numberline {3.3.6.1}写操作}{44}{subsubsection.3.3.6.1}
\contentsline {subsubsection}{\numberline {3.3.6.2}读操作}{45}{subsubsection.3.3.6.2}
\contentsline {subsection}{\numberline {3.3.7}持久化策略}{45}{subsection.3.3.7}
\contentsline {subsection}{\numberline {3.3.8}Sedna实时数据访问接口}{46}{subsection.3.3.8}
\contentsline {subsubsection}{\numberline {3.3.8.1}流控制}{47}{subsubsection.3.3.8.1}
\contentsline {subsubsection}{\numberline {3.3.8.2}Sedna实时API应用的示意}{48}{subsubsection.3.3.8.2}
\contentsline {section}{\numberline {3.4}实验和性能分析}{49}{section.3.4}
\contentsline {subsection}{\numberline {3.4.1}单客户端性能}{49}{subsection.3.4.1}
\contentsline {subsection}{\numberline {3.4.2}多客户端性能}{51}{subsection.3.4.2}
\contentsline {subsection}{\numberline {3.4.3}ZooKeeper性能分析}{52}{subsection.3.4.3}
\contentsline {section}{\numberline {3.5}小结}{54}{section.3.5}
\contentsline {chapter}{\numberline {第四章\hspace {0.3em}}基于触发器的计算模型}{57}{chapter.4}
\contentsline {section}{\numberline {4.1}引言}{57}{section.4.1}
\contentsline {section}{\numberline {4.2}相关工作介绍}{58}{section.4.2}
\contentsline {subsection}{\numberline {4.2.1}MapReduce模型及其问题}{58}{subsection.4.2.1}
\contentsline {subsection}{\numberline {4.2.2}迭代处理模型}{59}{subsection.4.2.2}
\contentsline {subsection}{\numberline {4.2.3}递增计算模型}{62}{subsection.4.2.3}
\contentsline {subsection}{\numberline {4.2.4}实时处理模型}{64}{subsection.4.2.4}
\contentsline {subsection}{\numberline {4.2.5}前人工作的不足及新的方案}{65}{subsection.4.2.5}
\contentsline {section}{\numberline {4.3}基于触发器的编程模型}{68}{section.4.3}
\contentsline {subsection}{\numberline {4.3.1}触发器模型}{68}{subsection.4.3.1}
\contentsline {subsection}{\numberline {4.3.2}Domino的编程模型}{69}{subsection.4.3.2}
\contentsline {subsubsection}{\numberline {4.3.2.1}事件(Event)}{70}{subsubsection.4.3.2.1}
\contentsline {subsubsection}{\numberline {4.3.2.2}条件(Condition)}{72}{subsubsection.4.3.2.2}
\contentsline {subsubsection}{\numberline {4.3.2.3}动作(Action)}{73}{subsubsection.4.3.2.3}
\contentsline {subsection}{\numberline {4.3.3}同步模型}{75}{subsection.4.3.3}
\contentsline {subsubsection}{\numberline {4.3.3.1}严格同步}{75}{subsubsection.4.3.3.1}
\contentsline {subsubsection}{\numberline {4.3.3.2}完全异步}{76}{subsubsection.4.3.3.2}
\contentsline {subsubsection}{\numberline {4.3.3.3}最终同步}{76}{subsubsection.4.3.3.3}
\contentsline {section}{\numberline {4.4}设计和实现}{79}{section.4.4}
\contentsline {subsection}{\numberline {4.4.1}执行流程}{81}{subsection.4.4.1}
\contentsline {subsection}{\numberline {4.4.2}事件感知组件(Event Detector)}{82}{subsection.4.4.2}
\contentsline {subsubsection}{\numberline {4.4.2.1}WAL Feeds}{82}{subsubsection.4.4.2.1}
\contentsline {subsubsection}{\numberline {4.4.2.2}顺序扫描}{84}{subsubsection.4.4.2.2}
\contentsline {subsection}{\numberline {4.4.3}延迟写组件(Gathered I/O)}{84}{subsection.4.4.3}
\contentsline {subsection}{\numberline {4.4.4}容错和恢复组件}{85}{subsection.4.4.4}
\contentsline {subsection}{\numberline {4.4.5}优化}{87}{subsection.4.4.5}
\contentsline {subsubsection}{\numberline {4.4.5.1}内存加速}{87}{subsubsection.4.4.5.1}
\contentsline {subsubsection}{\numberline {4.4.5.2}负载均衡}{88}{subsubsection.4.4.5.2}
\contentsline {section}{\numberline {4.5}应用实例}{89}{section.4.5}
\contentsline {subsection}{\numberline {4.5.1}PageRank算法}{89}{subsection.4.5.1}
\contentsline {subsection}{\numberline {4.5.2}协同过滤算法}{91}{subsection.4.5.2}
\contentsline {subsection}{\numberline {4.5.3}$K$-means算法}{93}{subsection.4.5.3}
\contentsline {section}{\numberline {4.6}实验分析}{95}{section.4.6}
\contentsline {subsection}{\numberline {4.6.1}实验环境设置}{95}{subsection.4.6.1}
\contentsline {subsection}{\numberline {4.6.2}HBase性能比较}{95}{subsection.4.6.2}
\contentsline {subsection}{\numberline {4.6.3}与MapReduce比较}{97}{subsection.4.6.3}
\contentsline {subsection}{\numberline {4.6.4}递增计算性能}{99}{subsection.4.6.4}
\contentsline {section}{\numberline {4.7}小结}{100}{section.4.7}
\contentsline {chapter}{\numberline {第五章\hspace {0.3em}}结束语}{101}{chapter.5}
\contentsline {section}{\numberline {5.1}研究工作总结}{101}{section.5.1}
\contentsline {section}{\numberline {5.2}对未来工作的展望}{102}{section.5.2}
\contentsline {chapter}{参考文献}{103}{chapter*.66}
\contentsline {section}{\numberline {.1}代码节选}{110}{section.Alph0.1}
\contentsline {subsection}{\numberline {.1.1}\textbf {[分布式爬虫实例]}}{110}{subsection.Alph0.1.1}
\contentsline {subsection}{\numberline {.1.2}\textbf {[PageRank实现实例]}}{111}{subsection.Alph0.1.2}
\contentsline {chapter}{致$\hskip 1em\relax $谢}{115}{appendix*.67}
\contentsline {chapter}{在读期间发表的学术论文与取得的研究成果}{117}{appendix*.68}
\contentsfinish 
